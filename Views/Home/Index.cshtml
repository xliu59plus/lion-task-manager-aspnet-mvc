@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <h3 class="display-6">Vertical Printer Can be Hired Anywhere</h2>

    @if (User != null && User.Identity != null && User.Identity.IsAuthenticated)
    {
        if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success">
                @TempData["SuccessMessage"]
            </div>
            TempData.Remove("SuccessMessage");
        }

        <!-- Show "My Tasks" button if the user is logged in and has the "Poster" or "Taker" role -->
        if(User.IsInRole("Poster") || User.IsInRole("Taker")) {
            <a href="@Url.Action("ViewMyTask", "Home")" class="btn btn-primary mt-4">My Tasks</a>
            <a href="@Url.Action("Index", "Notification")" class="btn btn-secondary mt-4">Notification Center</a>
        } else if(User.IsInRole("Inactive_Poster") || User.IsInRole("Inactive_Taker")){
            <div class="alert alert-warning">
                Please complete your profile for activation
            </div>
            <a href="@Url.Action("CompleteProfile", "Home")" class="btn btn-primary mt-4">Complete Profile to be Activated</a>
        } else {
            <div class="alert alert-warning">
            User doesn't have a Poster or Taker Role.
        </div>
        }
    }
</div>

@* <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBdkv4tRPCXtSDaqbRpQLQ6QjER5zIAagg&libraries=places"></script>

<div>
    <input id="addressInput" type="text" placeholder="Enter an address" style="width: 300px;">
</div>
<div id="map" style="height: 400px; width: 100%;"></div>


<script>
function initMap() {
    // Initialize map centered on a default location
    var defaultLocation = { lat: 40.7128, lng: -74.0060 }; // Example: New York City
    var map = new google.maps.Map(document.getElementById('map'), {
        center: defaultLocation,
        zoom: 13
    });

    // Set up autocomplete for the address input
    var input = document.getElementById('addressInput');
    var autocomplete = new google.maps.places.Autocomplete(input);
    autocomplete.bindTo('bounds', map);

    // Marker for the selected location
    var marker = new google.maps.Marker({
        map: map
    });

    // When the user selects an address from the autocomplete dropdown
    autocomplete.addListener('place_changed', function() {
        var place = autocomplete.getPlace();
        if (!place.geometry) {
            // User entered the name of a place that was not suggested and pressed Enter
            alert("No details available for input: '" + place.name + "'");
            return;
        }

        // Center the map on the selected location
        if (place.geometry.viewport) {
            map.fitBounds(place.geometry.viewport);
        } else {
            map.setCenter(place.geometry.location);
            map.setZoom(17); // zoom closer
        }

        // Place a marker on the selected location
        marker.setPosition(place.geometry.location);
        marker.setVisible(true);
    });
}

// Initialize the map after the window loads
window.onload = initMap;
</script> *@
