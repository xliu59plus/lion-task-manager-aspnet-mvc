@using LionTaskManagementApp.Areas.Identity.Data
@using Microsoft.AspNetCore.Identity
@model LionTaskManagementApp.Models.TaskModel
@inject UserManager<TaskUser> UserManager

@{
    ViewData["Title"] = "Details";
}

<h1>Task Details</h1>

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.OwnerId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.OwnerId)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Budget)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Budget)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Length) (inch)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Length)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Height) (inch)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Height)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FullAddress)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FullAddress)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FirstLine)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FirstLine)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.SecondLine)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.SecondLine)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.StateProvince)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StateProvince)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.City)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.City)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ZipCode)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ZipCode)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Deadline)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Deadline)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ProjectResolution) (DPI)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ProjectResolution)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.IndoorOutdoor)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.IndoorOutdoor)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.WallType)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.WallType)
        </dd>
        <dt class="col-sm-2">
            Wall Picture
        </dt>
        <dd class="col-sm-10">
            @if (Model.WallPicUrl != null)
            {
                <img src="@Model.WallPicUrl" alt="Wall Picture" style="max-width: 200px;" />
            }
        </dd>

        <dt class="col-sm-2">
            Artwork Picture
        </dt>
        <dd class="col-sm-10">
            @if (Model.ArtworkUrl != null)
            {
                <img src="@Model.ArtworkUrl" alt="Artwork" style="max-width: 200px;" />
            }
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DowngradeResolution)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DowngradeResolution)
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Status)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TakenById)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TakenById)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CreatedTime)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CreatedTime)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="TakerIndex">Back to List</a>
</div>

<div class="mt-3">
    @{
        var currentUserId = UserManager.GetUserId(User);
    }
    @if (Model.Status.Equals(MyTaskStatus.Initialized.ToString()) && string.IsNullOrEmpty(Model.TakenById))
    {
        <a asp-action="RequestTask" asp-controller="Taker" asp-route-taskId="@Model?.Id" asp-route-doAccept="true" class="btn btn-success">Pick</a>
        <a asp-action="RequestTask" asp-controller="Taker" asp-route-taskId="@Model?.Id" asp-route-doAccept="false" class="btn btn-secondary">Not Interested</a>
    }
    else if (Model.Status.Equals(MyTaskStatus.ReadyToStart.ToString()) && Model.TakenById.Equals(currentUserId))
    {
        <a asp-action="ProcessToInProgress" asp-controller="Taker" asp-route-taskId="@Model?.Id" asp-route-doAccept="true" class="btn btn-primary">Start the Work</a>
        <a asp-action="ProcessToInProgress" asp-controller="Taker" asp-route-taskId="@Model?.Id" asp-route-doAccept="false" class="btn btn-danger">Decline</a>
    }
    else if (Model.Status.Equals(MyTaskStatus.InProgress.ToString()) && Model.TakenById.Equals(currentUserId))
    {
        <a asp-action="RequestProjectComplete" asp-controller="Taker" asp-route-taskId="@Model?.Id" class="btn btn-success">Complete Project</a>
    } else if(Model.Status.Equals(MyTaskStatus.Completed.ToString()))
    {
        <div id="notification-bar" class="alert alert-success">
            <span> @User.Identity.Name</span> completed the task!
        </div>
    }
</div>

@if (TempData["RequestResult"] != null)
{
    <div class="alert alert-success">
        @TempData["RequestResult"]
    </div>
    TempData.Remove("RequestResult");
}

